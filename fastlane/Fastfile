# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.62.1"

default_platform :ios

platform :ios do
  skip_docs

  devices = ["iPhone X (11.0)"]
  devices << "iPhone 7 (10.0)" if !Helper.is_ci?
  devices << "iPhone 6 (9.0)" if !Helper.is_ci?
  devices << "iPhone 5s (8.1)" if !Helper.is_ci?

  desc "Runs the following lanes:\n- test\n- pod_lint\n- carthage_lint"
  lane :ci do
    test
    pod_lint
    carthage_lint
  end

  desc "Runs all the tests"
  lane :test do
    cocoapods(
      podfile: "Example/Podfile",
      try_repo_update_on_error: true,
    )

    swiftlint(
      executable: "Example/Pods/Swiftlint/swiftlint",
      strict: true,
    )

    # The problem lies in the fact (or rather: serious bug in xcodebuild) that
    # the timeout for connecting to the XCTest server starts at the moment you
    # issue the command xcodebuild. The timeout is 120 seconds, so if your
    # compilation + startup of the simulator takes longer than 2 minutes
    # xcodebuild will give this "Canceling tests due to timeout" error.
    # https://stackoverflow.com/questions/37922146/xctests-failing-on-physical-device-canceling-tests-due-to-timeout/40790171#40790171
    scan(
      build_for_testing: true,
      devices: devices,
      scheme: "ReCaptcha-Example",
      workspace: "Example/ReCaptcha.xcworkspace",
      code_coverage: true,
    )

    scan(
      test_without_building: true,
      devices: devices,
      scheme: "ReCaptcha-Example",
      workspace: "Example/ReCaptcha.xcworkspace",
      code_coverage: true,
    )

    if is_ci
      codecov(
        project_name: 'ReCaptcha',
        use_xcodeplist: true,
      )
    else
      puts "Not CI: Skipping coverage files upload"
    end
  end

  desc "Lint Cocoapods Lib"
  lane :pod_lint do
    pod_lib_lint
  end

  desc "Lint Carthage lib"
  lane :carthage_lint do
    carthage(
      command: "update",
      platform: "iOS",
      cache_builds: true,
    )

    carthage(
      command: "build",
      platform: "iOS",
      cache_builds: true,
      no_skip_current: true,
    )
  end

  desc "Deploy a new version to Github and Cocoapods"
  lane :release do
    carthage(
      command: "archive",
    )

    pod_push(
      path: "ReCaptcha.podspec",
      verbose: true,
    )

    prev_tag = sh "git describe --abbrev=0 --tags `git rev-list --tags --skip=1  --max-count=1`"
    changelog = changelog_from_git_commits(
      between: [last_git_tag, prev_tag.strip],
      pretty: "- %s"
    )

    set_github_release(
      repository_name: "fjcaetano/ReCaptcha",
      tag_name: last_git_tag,
      name: last_git_tag,
      upload_assets: ["ReCaptcha.framework.zip"],
      description: changelog,
    )
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
